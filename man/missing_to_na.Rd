% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/missing_to_na.R
\name{missing_to_na}
\alias{missing_to_na}
\title{A preprocessing function to replace values with NA.}
\usage{
missing_to_na(vec, equal.val, mod.val, restrict.sign = TRUE)
}
\arguments{
\item{vec}{A numeric, integer, or character vector.}

\item{equal.val}{A vector of length 1 or greater containing any combination of numbers, characters, or strings that match the target values exactly.}

\item{mod.val}{A single number that divides into the target numeric or integer values with zero remainder.}

\item{restrict.sign}{A logical, to be paired with \code{mod.val}, indicating whether the numeric or integer value acted upon should have the same sign as \code{mod.val}.}
}
\value{
The input vector with all matching values set to missing.
}
\description{
A preprocessing function to replace values with NA.
}
\examples{
test.df <- data_frame(a = 1:5, b = -2:-6, c = rnorm(5), d = LETTERS[1:5])

missing_to_na(test.df$b, mod.val = 3)

test.df \%>\% mutate_all(
  ~ missing_to_na(., equal.val = 2)
)

test.df \%>\% mutate_if(
 ~ any(class(.) \%in\% c("numeric", "integer", "character")),
 ~ missing_to_na(., equal.val = c(2, 3))
)

test.df \%>\% mutate_at(
  c("a", "b"),
  ~ missing_to_na(., equal.val = c(2, 3, "E"), mod.val = -2, restrict.sign = TRUE)
)

epoch1.main.df \%>\% mutate_at(
  grep("^ecogself\\\\_(mem|lang|vis|plan|org|attn)\\\\d{2}$", names(.)),
   ~ missing_to_na(., equal.val = 0)
)

}
